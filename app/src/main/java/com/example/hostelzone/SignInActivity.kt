package com.example.hostelzone

import android.content.Context
import android.content.Intent
import android.content.SharedPreferences
import android.os.Bundle
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.example.hostelzone.databinding.ActivitySignInBinding
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.database.*

class User(
    val username: String = "",
    val password: String = "",
    val userType: String = ""
)

class SignInActivity : AppCompatActivity() {

    private lateinit var binding: ActivitySignInBinding
    private lateinit var firebaseDatabase: FirebaseDatabase
    private lateinit var databaseReference: DatabaseReference
    private lateinit var sharedPreferences: SharedPreferences


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivitySignInBinding.inflate(layoutInflater)
        setContentView(binding.root)

        // Initialize Firebase components
        firebaseDatabase = FirebaseDatabase.getInstance()
        databaseReference = firebaseDatabase.reference.child("users")

        sharedPreferences = getSharedPreferences("myPrefs", Context.MODE_PRIVATE)


        // Find views and set click listeners
        binding.signInbutton.setOnClickListener {
            val signupUsername = binding.signInUsername.text.toString()
            val signupPassword = binding.signInPassword.text.toString()

            if (signupUsername.isNotEmpty() && signupPassword.isNotEmpty()) {
                signInUser(signupUsername, signupPassword)
            } else {
                Toast.makeText(this@SignInActivity, "All fields are mandatory", Toast.LENGTH_SHORT).show()
            }
        }

        binding.signupRedirect.setOnClickListener {
            startActivity(Intent(this@SignInActivity, SignUpActivity::class.java))
            finish()
        }
    }

    private fun signInUser(username: String, password: String) {
        databaseReference.orderByChild("username").equalTo(username).addListenerForSingleValueEvent(object : ValueEventListener {
            override fun onDataChange(dataSnapshot: DataSnapshot) {
                if (dataSnapshot.exists()) {
                    for (userSnapshot in dataSnapshot.children) {

                        val userId = userSnapshot.key // Get the autogenerated ID
                        val user = userSnapshot.getValue(User::class.java)

                        if (user != null && user.password == password) {
                            sharedPreferences.edit().putString("userId", userId).apply()
                            sharedPreferences.edit().putString("userType", user.userType).apply()

                            Toast.makeText(this@SignInActivity, "Logged in Successfully", Toast.LENGTH_SHORT).show()
                            // Redirect to appropriate activity based on user type
                            when (user.userType) {
                                "Inmate" -> {
                                    val intent = Intent(this@SignInActivity, BottomNavigation::class.java)
                                    intent.putExtra("username", username)
                                    startActivity(intent)

                                }
                                "Tutor" -> {
                                    val intent = Intent(this@SignInActivity, TutorBottomNavigation::class.java)
                                    intent.putExtra("username", username)
                                    startActivity(intent)
                                }

                                // Handle other user types
                                else -> {
                                    startActivity(Intent(this@SignInActivity, MainActivity::class.java))
                                }
                            }
                            finish()
                            return
                        }
                    }
                    Toast.makeText(this@SignInActivity, "Incorrect password", Toast.LENGTH_SHORT).show()
                } else {
                    Toast.makeText(this@SignInActivity, "User not found", Toast.LENGTH_SHORT).show()
                }
            }


            override fun onCancelled(databaseError: DatabaseError) {
                Toast.makeText(this@SignInActivity, "Database Error: ${databaseError.message}", Toast.LENGTH_SHORT).show()
            }
        })
    }
}
